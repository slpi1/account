{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/account-from/account-from.component.ts","./src/app/components/account-from/account-from.component.html","./src/app/components/account/account.component.ts","./src/app/components/account/account.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/site-from/site-from.component.ts","./src/app/components/site-from/site-from.component.html","./src/app/middleware/auth-interceptor.ts","./src/app/models/token.ts","./src/app/page/dashboard/dashboard.component.ts","./src/app/page/dashboard/dashboard.component.html","./src/app/page/manager/manager.component.ts","./src/app/page/manager/manager.component.html","./src/app/services/account.service.ts","./src/app/services/auth.service.ts","./src/app/services/site.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {DashboardComponent} from './page/dashboard/dashboard.component';\nimport {ManagerComponent} from './page/manager/manager.component';\n\n\n\nconst routes: Routes = [\n\t{path:'dashboard', component:DashboardComponent},\n\t{path:'manager', component:ManagerComponent},\n\t{path: '',   redirectTo: '/dashboard', pathMatch: 'full' }, // redirect to `first-component`\n  \t{path: '**', component: DashboardComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, ViewChild  } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router} from '@angular/router';\n\nimport {AuthService} from './services/auth.service'\nimport { Token } from './models/token';\nimport { LoginComponent } from './components/login/login.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent   implements OnInit{\n  title = '密码管理';\n  logined = false\n  user:any = null\n\n  @ViewChild(LoginComponent)\n  private loginForm: LoginComponent;\n\n  constructor(private fb: FormBuilder,\n    private router: Router ,\n  \tprivate authService:AuthService) {\n    this.logined = authService.getLoginStatus()\n    authService.loginStatus$.subscribe(logined => {\n      this.logined = logined\n      if(logined) this.profile()\n    })\n  }\n\n  ngOnInit(): void {\n    if(this.logined){\n      this.profile()\n    }\n    console.log(this.user)\n  }\n\n  logout(){\n    this.authService.logout()\n    this.user = null\n    this.router.navigate(['/dashboard']);\n  }\n\n  profile(){\n    this.authService.user().subscribe(user => {\n      this.user = user\n    })\n  }\n\n  showLoginForm(){\n    this.loginForm.show()\n  }\n}\n","<nz-layout class=\"layout\">\n  <nz-sider nzCollapsible nzBreakpoint=\"lg\" [nzCollapsedWidth]=\"0\">\n    <div class=\"logo\">Password</div>\n    <ul *ngIf=\"logined\" nz-menu nzTheme=\"dark\" nzMode=\"inline\">\n\n      <li nz-menu-item [nzMatchRouter]=\"true\" routerLink=\"/dashboard\" >\n        <i nz-icon nzType=\"key\"></i>\n        <span>我的密码</span>\n      </li>\n\n      <li nz-menu-item [nzMatchRouter]=\"true\"  routerLink=\"/manager\" >\n        <i nz-icon nzType=\"table\"></i>\n        <span>数据管理</span>\n      </li>\n    </ul>\n  </nz-sider>\n  <nz-layout>\n    <nz-header>\n      <div class=\"login-info\">\n        <div *ngIf=\"logined; else loginless\">\n          <span nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"menu\">\n            {{user?.email}}\n            <i nz-icon nzType=\"down\"></i>\n          </span>\n          <nz-dropdown-menu #menu=\"nzDropdownMenu\">\n            <ul nz-menu>\n              <li nz-menu-item (click)=\"logout()\">退出登录</li>\n            </ul>\n          </nz-dropdown-menu>\n        </div>\n        <ng-template #loginless>\n          <a (click)=\"showLoginForm()\">登录</a>\n        </ng-template>\n      </div>\n    </nz-header>\n    <nz-content>\n      <div class=\"inner-content\">\n        <router-outlet></router-outlet>\n      </div>\n    </nz-content>\n    <nz-footer>Ant Design ©2020 Implement By Angular</nz-footer>\n  </nz-layout>\n</nz-layout>\n\n<app-login></app-login>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { registerLocaleData } from '@angular/common';\nimport zh from '@angular/common/locales/zh';\n\nimport { NZ_I18N } from 'ng-zorro-antd/i18n';\nimport { zh_CN } from 'ng-zorro-antd/i18n';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzLayoutModule } from 'ng-zorro-antd/layout';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzMessageModule } from 'ng-zorro-antd/message';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzPopconfirmModule } from 'ng-zorro-antd/popconfirm';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthInterceptor } from './middleware/auth-interceptor';\nimport { AccountComponent } from './components/account/account.component';\nimport { DashboardComponent } from './page/dashboard/dashboard.component';\nimport { ManagerComponent } from './page/manager/manager.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SiteFromComponent } from './components/site-from/site-from.component';\nimport { AccountFromComponent } from './components/account-from/account-from.component';\n\nregisterLocaleData(zh);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccountComponent,\n    DashboardComponent,\n    ManagerComponent,\n    LoginComponent,\n    SiteFromComponent,\n    AccountFromComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n\n    NzFormModule,\n    NzIconModule,\n    NzInputModule,\n    NzButtonModule,\n    NzLayoutModule,\n    NzMenuModule,\n    NzGridModule,\n    NzModalModule,\n    NzDropDownModule,\n    NzMessageModule,\n    NzSelectModule,\n    NzTableModule,\n    NzPopconfirmModule,\n    NzToolTipModule\n\n  ],\n  providers: [\n    { provide: NZ_I18N, useValue: zh_CN },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit,  EventEmitter, Output, ViewChild} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\nimport { SiteService } from '../../services/site.service';\nimport {Site}  from '../../models/site';\n\nimport { AccountService } from '../../services/account.service';\nimport {Account}  from '../../models/account';\n\nimport {SiteFromComponent} from '../site-from/site-from.component'\n\n@Component({\n  selector: 'app-account-from',\n  templateUrl: './account-from.component.html',\n  styleUrls: ['./account-from.component.css']\n})\nexport class AccountFromComponent implements OnInit {\n\n  @Output() addEvent = new EventEmitter<boolean>();\n\n\n  @ViewChild(SiteFromComponent)\n  private siteFrom: SiteFromComponent;\n\n  validateForm!: FormGroup;\n  showAccountForm = false;\n  sites:Array<Site>\n\n  constructor(private fb: FormBuilder,\n    private siteService:SiteService,\n    private accountService:AccountService,\n    private message: NzMessageService) { }\n\n  ngOnInit(): void {\n    this.validateForm = this.fb.group({\n      account: [null, [Validators.required]],\n      siteId: [null, [Validators.required]],\n    });\n    this.fetchSites()\n  }\n\n  fetchSites(){\n    this.siteService.sites().subscribe((data:Array<Site>) =>{\n      this.sites = data\n    })\n  }\n\n  show(){\n  \tthis.showAccountForm = true\n  }\n\n  hidden(){\n  \tthis.showAccountForm = false\n  }\n  addAccount(){\n  \tthis.accountService.add(this.validateForm.value.account, this.validateForm.value.siteId)\n      .subscribe((account:Account) => {\n        this.showAccountForm = false\n        this.addEvent.emit()\n      })\n  }\n\n  showSiteModal(){\n    this.siteFrom.show()\n  }\n}\n","<nz-modal \n\t[(nzVisible)]=\"showAccountForm\" \n\tnzTitle=\"新增账号\" \n\t[nzFooter]=\"null\" \n\t(nzOnCancel)=\"hidden()\"\n\t[nzWidth]=\"300\">\n  <form nz-form [formGroup]=\"validateForm\" nzLayout=\"vertical\" (ngSubmit)=\"addAccount()\">\n    <nz-form-item>\n      <nz-form-label  nzRequired nzFor=\"account\">账号</nz-form-label>\n      <nz-form-control [nzSpan]=\"24\" nzErrorTip=\"请输入账号!\">\n        <input id=\"note\" type=\"text\" nz-input formControlName=\"account\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"siteId\" >站点 &nbsp;<a (click)=\"showSiteModal()\">新增站点</a></nz-form-label>\n      <nz-form-control [nzSpan]=\"24\" nzErrorTip=\"请选择站点!\">\n        <nz-select formControlName=\"siteId\">\n          <nz-option  *ngFor=\"let site of sites\" [nzValue]=\"site.id\" [nzLabel]=\"site.name\"></nz-option>\n        </nz-select>\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-control [nzSpan]=\"24\">\n        <button nz-button nzBlock  nzType=\"primary\">确认</button>\n      </nz-form-control>\n    </nz-form-item>\n  </form>\n</nz-modal>\n\n<app-site-from (addSiteEvent)=\"fetchSites()\"></app-site-from>\n","import { Component, OnInit, Input,  SimpleChange  } from '@angular/core';\n\nimport MD5 from 'md5';\nimport Clipboard from 'Clipboard';\n\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\nimport {AccountService} from '../../services/account.service';\nimport {AuthService} from '../../services/auth.service';\n\nimport {Site} from '../../models/site';\nimport {Account} from '../../models/account';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n  logined: boolean;\n\n  bit = [1,4,7,10,13,16,19,22,25,28,31]\n\n  sites:Array<Site> = []\n  accounts: Array<Account> = []\n\n  siteId:number\n  accountId:number\n\n  account:string\n  domain:string\n  hash:string\n\n  password:string\n\n  showCopy = false\n  clipboard;\n  constructor(private accountService:AccountService,\n    private msg:NzMessageService,\n  \tprivate authService:AuthService) { \n    this.logined = authService.getLoginStatus()\n    authService.loginStatus$.subscribe(logined => {\n      this.logined = logined\n      if(this.logined){\n        this.fetchAccount()\n      }\n    })\n  }\n\n  ngOnInit(): void {\n  \tif(this.logined){\n      this.fetchAccount()\n  \t}\n    new Clipboard('.copy').on('success', (e) =>  {\n      this.msg.success('密码已复制到粘贴板')\n    });\n  }\n\n  fetchAccount(){\n    this.accountService.accounts().subscribe((data:Array<Site>)=>{\n      this.sites = data\n    })\n  }\n\n  generate(){\n  \tvar g = MD5(this.account + \"@\" + this.domain + \":\" + this.hash),\n  \t\tt = '';\n\n  \tthis.bit.forEach(function(i){\n  \t\tt += ( i > 15 ) ? g[i].toUpperCase() : g[i];\n  \t})\n\n  \tthis.password = t;\n  \tif(!this.showCopy){\n\n  \t\tthis.showCopy = true\n  \t}\n  }\n\n  changeSite(id){\n\n  \tfor(var i in this.sites){\n  \t\tlet site = this.sites[i]\n  \t\tif (site.id == id) {\n  \t\t\tthis.accounts = site.accounts\n  \t\t\tthis.domain = site.host\n  \t\t}\n  \t}\n  }\n\n  changeAccount(id){\n\n  \tfor(var i in this.accounts){\n  \t\tlet account = this.accounts[i]\n  \t\tif (account.id == id) {\n  \t\t\tthis.account = account.account\n  \t\t}\n  \t}\n  }\n}\n","<form nz-form>\n\t<nz-form-item>\n\t\t<nz-form-control [nzXs]=\"20\" [nzMd]=\"8\" [nzXXl]=\"4\">\n\t\t\t<nz-input-group  nzPrefixIcon=\"home\">\n\t\t\t\t<input  *ngIf=\"!logined; else elseSiteBlock\" [(ngModel)]=\"domain\" name=\"domain\" nz-input placeholder=\"网站域名\" />\n\t\t\t\t<ng-template #elseSiteBlock>\n\t\t\t\t\t<nz-select nzBorderless nzSize=\"small\" \n\t\t\t\t\t\tname=\"siteId\"\n\t\t\t\t\t\t[(ngModel)]=\"siteId\"\n\t\t\t\t\t\t(ngModelChange)=\"changeSite($event)\">\n\t\t\t\t\t\t<nz-option *ngFor=\"let site of sites\" [nzLabel]=\"site.name\" [nzValue]=\"site.id\"></nz-option>\n\t\t\t\t\t</nz-select>\n\t\t\t\t</ng-template>\n\t\t\t</nz-input-group>\n\t\t</nz-form-control>\n\t</nz-form-item>\n\n\t<nz-form-item>\n\t\t<nz-form-control [nzXs]=\"20\" [nzMd]=\"8\" [nzXXl]=\"4\">\n\t\t\t<nz-input-group  nzPrefixIcon=\"user\">\n\t\t\t\t<input  *ngIf=\"!logined; else elseAccountBlock\"  [(ngModel)]=\"account\" name=\"account\" nz-input placeholder=\"用户名/登录名\" />\n\t\t\t\t<ng-template #elseAccountBlock>\n\t\t\t\t\t<nz-select nzBorderless nzSize=\"small\" \n\t\t\t\t\t\tname=\"accountId\"\n\t\t\t\t\t\t[(ngModel)]=\"accountId\"\n\t\t\t\t\t\t(ngModelChange)=\"changeAccount($event)\">\n\t\t\t\t\t\t<nz-option *ngFor=\"let account of accounts\" [nzLabel]=\"account.account\" [nzValue]=\"account.id\"></nz-option>\n\t\t\t\t\t</nz-select>\n\t\t\t\t</ng-template>\n\t\t\t</nz-input-group>\n\t\t</nz-form-control>\n\t</nz-form-item>\n\n\t<nz-form-item>\n\t\t<nz-form-control [nzXs]=\"20\" [nzMd]=\"8\" [nzXXl]=\"4\">\n\t\t\t<nz-input-group  nzPrefixIcon=\"lock\">\n\t\t\t\t<input [(ngModel)]=\"hash\" name=\"hash\" type=\"password\" nz-input placeholder=\"唯一码\" />\n\t\t\t</nz-input-group>\n\t\t</nz-form-control>\n\t</nz-form-item>\n\n\t<nz-form-item>\n\t\t<nz-form-control [nzXs]=\"20\" [nzMd]=\"8\" [nzXXl]=\"4\">\n\t\t\t<button nz-button nzType=\"primary\" nzBlock (click)=\"generate()\">生成</button>\n\t\t</nz-form-control>\n\t</nz-form-item>\n\n\t<nz-form-item *ngIf=\"showCopy\">\n\t\t<nz-form-control [nzXs]=\"20\" [nzMd]=\"8\" [nzXXl]=\"4\">\n\t\t\t<button nz-button class=\"copy\"  [attr.data-clipboard-text]=\"password\" nzType=\"primary\" nzGhost nzBlock>复制密码</button>\n\t\t</nz-form-control>\n\t</nz-form-item>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\nimport {AuthService} from '../../services/auth.service';\nimport {Token} from '../../models/token';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  validateForm!: FormGroup;\n\n  showLoginForm = false;\n  constructor(private fb: FormBuilder,\n  \tprivate authService:AuthService,\n    private message: NzMessageService) { }\n\n  ngOnInit(): void {\n    this.validateForm = this.fb.group({\n      email: [null, [Validators.required]],\n      password: [null, [Validators.required]],\n    });\n  }\n\n  login(){\n  \tthis.authService\n      .login(this.validateForm.value.email,this.validateForm.value.password)\n      .subscribe((response:Token) =>{\n        this.authService.setToken(response)\n\n        this.hidden()\n        this.message.create('success', `登录成功`);\n      })\n  }\n\n  show(){\n  \tthis.showLoginForm = true\n  }\n\n  hidden(){\n  \tthis.showLoginForm = false\n  }\n}\n","<nz-modal \n\t[(nzVisible)]=\"showLoginForm\" \n\tnzTitle=\"登录\" \n\t[nzFooter]=\"null\" \n\t(nzOnCancel)=\"hidden()\"\n\t[nzWidth]=\"300\">\n \t<form nz-form  [formGroup]=\"validateForm\" class=\"login-form\" (ngSubmit)=\"login()\">\n      \n      <nz-form-item>\n        <nz-form-control nzErrorTip=\"Please input your email!\">\n          <nz-input-group nzPrefixIcon=\"user\">\n            <input type=\"text\" nz-input formControlName=\"email\" placeholder=\"email\" />\n          </nz-input-group>\n        </nz-form-control>\n      </nz-form-item>\n      \n      <nz-form-item>\n        <nz-form-control nzErrorTip=\"Please input your Password!\">\n          <nz-input-group nzPrefixIcon=\"lock\">\n            <input type=\"password\" nz-input formControlName=\"password\" placeholder=\"Password\" />\n          </nz-input-group>\n        </nz-form-control>\n      </nz-form-item>\n      \n      <button nz-button class=\"login-form-button login-form-margin\" [nzType]=\"'primary'\" nzBlock>Log in</button>\n\n    </form>\n</nz-modal>","import { Component, OnInit,EventEmitter,Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\nimport { SiteService } from '../../services/site.service';\nimport {Site}  from '../../models/site';\n@Component({\n  selector: 'app-site-from',\n  templateUrl: './site-from.component.html',\n  styleUrls: ['./site-from.component.css']\n})\nexport class SiteFromComponent implements OnInit {\n\n  @Output() addSiteEvent = new EventEmitter<boolean>();\n\n  validateForm!: FormGroup;\n\n  showSiteForm = false;\n  constructor(private fb: FormBuilder,\n    private siteService:SiteService,\n    private message: NzMessageService) { }\n\n  ngOnInit(): void {\n    this.validateForm = this.fb.group({\n      name: [null, [Validators.required]],\n      host: [null, [Validators.required]],\n      description: [null],\n    });\n  }\n\n  show(){\n  \tthis.showSiteForm = true\n  }\n\n  hidden(){\n  \tthis.showSiteForm = false\n  }\n  addSite(){\n  \tthis.siteService.create(this.validateForm.value).subscribe((site:Site) => {\n      this.hidden()\n      this.addSiteEvent.emit()\n    })\n  }\n}\n","<nz-modal \n\t[(nzVisible)]=\"showSiteForm\" \n\tnzTitle=\"新增站点\" \n\t[nzFooter]=\"null\" \n\t(nzOnCancel)=\"hidden()\"\n\t[nzWidth]=\"300\">\n \t<form nz-form  [formGroup]=\"validateForm\"  nzLayout=\"vertical\" (ngSubmit)=\"addSite()\">\n      \n      <nz-form-item>\n        <nz-form-label  nzRequired nzFor=\"name\">名称</nz-form-label>\n        <nz-form-control nzErrorTip=\"请输入站点名称!\">\n          <input type=\"text\" nz-input formControlName=\"name\" />\n        </nz-form-control>\n      </nz-form-item>\n      \n      <nz-form-item>\n        <nz-form-label  nzRequired nzFor=\"host\">域名</nz-form-label>\n        <nz-form-control nzErrorTip=\"请输入站点域名!\">\n          <input type=\"text\" nz-input formControlName=\"host\" />\n        </nz-form-control>\n      </nz-form-item>\n\n      <nz-form-item>\n        <nz-form-label nzFor=\"description\">说明</nz-form-label>\n        <nz-form-control nzErrorTip=\"请输入站点描述!\">\n          <input type=\"text\" nz-input formControlName=\"description\" />\n        </nz-form-control>\n      </nz-form-item>\n      \n      <button nz-button class=\"login-form-button login-form-margin\" [nzType]=\"'primary'\" nzBlock>确认</button>\n\n    </form>\n</nz-modal>","import { Injectable } from '@angular/core';\r\nimport {\r\nHttpEvent, HttpInterceptor, HttpHandler, HttpRequest,HttpResponse,HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, retry, catchError } from 'rxjs/operators';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { AuthService } from '../services/auth.service'\r\n\r\n/** Pass untouched request through to the next request handler. */\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    guestRoute:Array<string> = [\r\n        '/api/auth/login'\r\n    ];\r\n\r\n    constructor(private auth: AuthService,\r\n        private msg: NzMessageService, \r\n        private router: Router) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        var authReq;\r\n        if(this.shouldAuth(req)){\r\n\r\n            const authToken = this.auth.getToken();\r\n            if(!authToken){\r\n                this.router.navigate(['/dashboard'])\r\n                throw \"no auth\";\r\n            }\r\n\r\n            authReq = req.clone({\r\n                headers: req.headers.set('Authorization', authToken.token_type + ' ' +authToken.access_token)\r\n            });\r\n        }else{\r\n            authReq = req;\r\n        }\r\n        return next.handle(authReq).pipe(\r\n          catchError((error: HttpErrorResponse) =>  {\r\n            if (error.error instanceof ErrorEvent) {\r\n              // A client-side or network error occurred. Handle it accordingly.\r\n              console.error('An error occurred:', error.error.message);\r\n            } else {\r\n              // The backend returned an unsuccessful response code.\r\n              // The response body may contain clues as to what went wrong,\r\n              console.error(\r\n                `Backend returned code ${error.status}, ` +\r\n                `body was: ${error.error}`);\r\n\r\n              if(error.status == 401){\r\n                this.auth.logout()\r\n                this.router.navigate(['/dashboard'])\r\n              }else if(error.status == 500){\r\n              }else if(error.status == 422){\r\n              }\r\n              this.msg.error(`${error.error.message}`);\r\n            }\r\n            // return an observable with a user-facing error message\r\n            return throwError(\r\n              'Something bad happened; please try again later.');\r\n          })\r\n        );\r\n\r\n    }\r\n\r\n    shouldAuth(req: HttpRequest<any>){\r\n        for (var key in this.guestRoute) {\r\n            if (this.guestRoute[key] == req.url){\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n}","export class Token {\n\taccess_token: string\n\texpires_in: number\n\ttoken_type: string\n}\n","import { Component, OnInit } from '@angular/core';\nimport {AccountComponent} from '../../components/account/account.component';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-account></app-account>\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport {AccountService} from '../../services/account.service';\n\nimport {Site} from '../../models/site';\nimport {Account} from '../../models/account';\n\nimport {AccountFromComponent} from '../../components/account-from/account-from.component';\n@Component({\n  selector: 'app-manager',\n  templateUrl: './manager.component.html',\n  styleUrls: ['./manager.component.css']\n})\nexport class ManagerComponent implements OnInit {\n\n  @ViewChild(AccountFromComponent)\n  private accountFrom: AccountFromComponent;\n  \n  constructor(private accountService:AccountService) { }\n\n  sites:Site[] = []\n  accounts: Account[] = []\n\n\n\n  ngOnInit(): void {\n    this.fetchAccount()\n  }\n\n  fetchAccount(){\n    this.accountService.accounts().subscribe((data:Array<Site>)=>{\n      this.sites = data\n      this.accounts = this.getAccount(this.sites)\n    })\n  }\n\n  getAccount(sites){\n  \tlet accounts:Array<Account> = []\n  \tsites.forEach((site, key)=>{\n  \t\tsite.accounts.forEach((account,key) => {\n  \t\t\taccount.site = site\n\n  \t\t\taccounts.push(account)\n  \t\t})\n  \t})\n  \treturn accounts\n  }\n  showAccountForm(){\n    this.accountFrom.show()\n  }\n\n  addAccountSuccess(){\n    this.fetchAccount()\n  }\n\n  cancel(): void {\n  }\n\n  delete(account:Account): void {\n    console.log(account)\n    this.accountService.delete(account.id).subscribe((data)=>{\n      this.fetchAccount()\n    })\n  }  \n}\n","<div class=\"table-operations\">\n\t<button nz-button  nzType=\"primary\" (click)=\"showAccountForm()\"><i nz-icon nzType=\"plus\" nzTheme=\"outline\"></i>添加账号</button>\n</div>\n\n<nz-table \n\t#accountsTable \n\tnzBordered \n\t[nzShowPagination]=\"false\"\n\t[nzData]=\"accounts\">\n\t<thead>\n\t\t<tr>\n\t\t  <th>账号</th>\n\t\t  <th>站点</th>\n\t\t  <th>删除</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr *ngFor=\"let account of accountsTable.data\">\n\t\t  <td>{{ account.account }}</td>\n\t\t  <td><span nz-tooltip [nzTooltipTitle]=\"account.site.host\">{{ account.site.name }}</span></td>\n\t\t  <td>\n\t\t\t<button \n\t\t\tnz-button\n\t\t\tnzDanger\n\t\t\tnz-popconfirm\n\t      \tnzPopconfirmTitle=\"确认删除账号?\"\n\t      \tnzPopconfirmPlacement=\"bottom\"\n\t      \t(nzOnConfirm)=\"delete(account)\"\n\t      \t(nzOnCancel)=\"cancel()\"><i nz-icon nzType=\"delete\" nzTheme=\"outline\"></i>删除</button>\n\t\t  </td>\n\t\t</tr>\n\t</tbody>\n</nz-table>\n\n<app-account-from (addEvent)=\"addAccountSuccess()\"></app-account-from>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(private http: HttpClient) { }\n\n  accounts(){\n  \treturn this.http.get('api/account')\n  }\n\n  add(account, siteId){\n  \treturn this.http.put('api/account', {\n  \t\taccount:account,\n  \t\tsiteId:siteId\n  \t});\n  }\n\n  delete(id){\n    return this.http.delete('/api/account/' + id)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, Subject } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { Token } from '../models/token';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private loginStatusSource = new Subject<boolean>();\n  loginStatus$ = this.loginStatusSource.asObservable();\n\n  token:Token = null;\n  \n  constructor(private http: HttpClient) { \n  \tvar tokenValue = localStorage.getItem('access_token')\n\n  \tif(tokenValue){\n  \t\tthis.token = new Token\n  \t\tthis.token.access_token = tokenValue\n  \t\tthis.token.expires_in = 3600\n  \t\tthis.token.token_type = localStorage.getItem('token_type')\n  \t}\n  }\n\n  loginStatusChange() {\n    this.loginStatusSource.next(!!this.token);\n  }\n\n  getLoginStatus(){\n    return !!this.token\n  }\n\n  setToken(token){\n    this.token = token\n    localStorage.setItem('access_token', token.access_token);\n    localStorage.setItem('token_type', token.token_type);\n\n    this.loginStatusChange()\n  }\n\n  getToken(){\n  \treturn this.token\n  }\n\n  login(email, password){\n  \treturn this.http.post('/api/auth/login', {\n  \t\temail:email,\n  \t\tpassword:password\n  \t});\n  }\n\n  user(){\n    return this.http.get('/api/profile');\n  }\n\n  logout(){\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('token_type');\n    this.token = null\n    this.loginStatusChange()\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SiteService {\n\n  constructor(private http: HttpClient) { }\n\n  sites(){\n  \treturn this.http.get('api/site')\n  }\n\n  create(site){\n  \treturn this.http.put('api/site', site)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}