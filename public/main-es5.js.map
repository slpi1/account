{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/account-from/account-from.component.ts","webpack:///src/app/components/account-from/account-from.component.html","webpack:///src/app/components/account/account.component.ts","webpack:///src/app/components/account/account.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/site-from/site-from.component.ts","webpack:///src/app/components/site-from/site-from.component.html","webpack:///src/app/middleware/auth-interceptor.ts","webpack:///src/app/models/token.ts","webpack:///src/app/page/dashboard/dashboard.component.ts","webpack:///src/app/page/dashboard/dashboard.component.html","webpack:///src/app/page/manager/manager.component.ts","webpack:///src/app/page/manager/manager.component.html","webpack:///src/app/services/account.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/site.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","fb","router","authService","title","logined","user","getLoginStatus","loginStatus$","subscribe","profile","console","log","logout","navigate","loginForm","show","selector","templateUrl","styleUrls","AppModule","provide","useValue","useClass","multi","declarations","providers","bootstrap","AccountFromComponent","siteService","accountService","message","addEvent","showAccountForm","validateForm","group","account","required","siteId","fetchSites","sites","data","add","value","emit","siteFrom","hidden","addAccount","showSiteModal","AccountComponent","msg","bit","accounts","showCopy","fetchAccount","g","domain","hash","t","forEach","i","toUpperCase","password","on","success","site","host","generate","LoginComponent","showLoginForm","email","login","response","setToken","create","SiteFromComponent","addSiteEvent","showSiteForm","name","description","addSite","AuthInterceptor","auth","guestRoute","next","authReq","shouldAuth","authToken","getToken","clone","headers","set","token_type","access_token","handle","pipe","error","ErrorEvent","status","key","url","Token","DashboardComponent","ManagerComponent","getAccount","push","accountFrom","addAccountSuccess","AccountService","http","get","put","providedIn","AuthService","loginStatusSource","asObservable","token","tokenValue","localStorage","getItem","expires_in","setItem","loginStatusChange","post","removeItem","SiteService","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {DashboardComponent} from './page/dashboard/dashboard.component';\nimport {ManagerComponent} from './page/manager/manager.component';\n\n\n\nconst routes: Routes = [\n\t{path:'dashboard', component:DashboardComponent},\n\t{path:'manager', component:ManagerComponent},\n\t{path: '',   redirectTo: '/dashboard', pathMatch: 'full' }, // redirect to `first-component`\n  \t{path: '**', component: DashboardComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, ViewChild  } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router} from '@angular/router';\n\nimport {AuthService} from './services/auth.service'\nimport { Token } from './models/token';\nimport { LoginComponent } from './components/login/login.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent   implements OnInit{\n  title = '密码管理';\n  logined = false\n  user:any = null\n\n  @ViewChild(LoginComponent)\n  private loginForm: LoginComponent;\n\n  constructor(private fb: FormBuilder,\n    private router: Router ,\n  \tprivate authService:AuthService) {\n    this.logined = authService.getLoginStatus()\n    authService.loginStatus$.subscribe(logined => {\n      this.logined = logined\n      if(logined) this.profile()\n    })\n  }\n\n  ngOnInit(): void {\n    if(this.logined){\n      this.profile()\n    }\n    console.log(this.user)\n  }\n\n  logout(){\n    this.authService.logout()\n    this.user = null\n    this.router.navigate(['/dashboard']);\n  }\n\n  profile(){\n    this.authService.user().subscribe(user => {\n      this.user = user\n    })\n  }\n\n  showLoginForm(){\n    this.loginForm.show()\n  }\n}\n","<nz-layout class=\"layout\">\n  <nz-sider nzCollapsible nzBreakpoint=\"lg\" [nzCollapsedWidth]=\"0\">\n    <div class=\"logo\">Password</div>\n    <ul *ngIf=\"logined\" nz-menu nzTheme=\"dark\" nzMode=\"inline\">\n\n      <li nz-menu-item [nzMatchRouter]=\"true\" routerLink=\"/dashboard\" >\n        <i nz-icon nzType=\"key\"></i>\n        <span>我的密码</span>\n      </li>\n\n      <li nz-menu-item [nzMatchRouter]=\"true\"  routerLink=\"/manager\" >\n        <i nz-icon nzType=\"table\"></i>\n        <span>数据管理</span>\n      </li>\n    </ul>\n  </nz-sider>\n  <nz-layout>\n    <nz-header>\n      <div class=\"login-info\">\n        <div *ngIf=\"logined; else loginless\">\n          <span nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"menu\">\n            {{user?.email}}\n            <i nz-icon nzType=\"down\"></i>\n          </span>\n          <nz-dropdown-menu #menu=\"nzDropdownMenu\">\n            <ul nz-menu>\n              <li nz-menu-item (click)=\"logout()\">退出登录</li>\n            </ul>\n          </nz-dropdown-menu>\n        </div>\n        <ng-template #loginless>\n          <a (click)=\"showLoginForm()\">登录</a>\n        </ng-template>\n      </div>\n    </nz-header>\n    <nz-content>\n      <div class=\"inner-content\">\n        <router-outlet></router-outlet>\n      </div>\n    </nz-content>\n    <nz-footer>Ant Design ©2020 Implement By Angular</nz-footer>\n  </nz-layout>\n</nz-layout>\n\n<app-login></app-login>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { registerLocaleData } from '@angular/common';\nimport zh from '@angular/common/locales/zh';\n\nimport { NZ_I18N } from 'ng-zorro-antd/i18n';\nimport { zh_CN } from 'ng-zorro-antd/i18n';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzLayoutModule } from 'ng-zorro-antd/layout';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzMessageModule } from 'ng-zorro-antd/message';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzPopconfirmModule } from 'ng-zorro-antd/popconfirm';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthInterceptor } from './middleware/auth-interceptor';\nimport { AccountComponent } from './components/account/account.component';\nimport { DashboardComponent } from './page/dashboard/dashboard.component';\nimport { ManagerComponent } from './page/manager/manager.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SiteFromComponent } from './components/site-from/site-from.component';\nimport { AccountFromComponent } from './components/account-from/account-from.component';\n\nregisterLocaleData(zh);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccountComponent,\n    DashboardComponent,\n    ManagerComponent,\n    LoginComponent,\n    SiteFromComponent,\n    AccountFromComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n\n    NzFormModule,\n    NzIconModule,\n    NzInputModule,\n    NzButtonModule,\n    NzLayoutModule,\n    NzMenuModule,\n    NzGridModule,\n    NzModalModule,\n    NzDropDownModule,\n    NzMessageModule,\n    NzSelectModule,\n    NzTableModule,\n    NzPopconfirmModule,\n    NzToolTipModule\n\n  ],\n  providers: [\n    { provide: NZ_I18N, useValue: zh_CN },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit,  EventEmitter, Output, ViewChild} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\nimport { SiteService } from '../../services/site.service';\nimport {Site}  from '../../models/site';\n\nimport { AccountService } from '../../services/account.service';\nimport {Account}  from '../../models/account';\n\nimport {SiteFromComponent} from '../site-from/site-from.component'\n\n@Component({\n  selector: 'app-account-from',\n  templateUrl: './account-from.component.html',\n  styleUrls: ['./account-from.component.css']\n})\nexport class AccountFromComponent implements OnInit {\n\n  @Output() addEvent = new EventEmitter<boolean>();\n\n\n  @ViewChild(SiteFromComponent)\n  private siteFrom: SiteFromComponent;\n\n  validateForm!: FormGroup;\n  showAccountForm = false;\n  sites:Array<Site>\n\n  constructor(private fb: FormBuilder,\n    private siteService:SiteService,\n    private accountService:AccountService,\n    private message: NzMessageService) { }\n\n  ngOnInit(): void {\n    this.validateForm = this.fb.group({\n      account: [null, [Validators.required]],\n      siteId: [null, [Validators.required]],\n    });\n    this.fetchSites()\n  }\n\n  fetchSites(){\n    this.siteService.sites().subscribe((data:Array<Site>) =>{\n      this.sites = data\n    })\n  }\n\n  show(){\n  \tthis.showAccountForm = true\n  }\n\n  hidden(){\n  \tthis.showAccountForm = false\n  }\n  addAccount(){\n  \tthis.accountService.add(this.validateForm.value.account, this.validateForm.value.siteId)\n      .subscribe((account:Account) => {\n        this.showAccountForm = false\n        this.addEvent.emit()\n      })\n  }\n\n  showSiteModal(){\n    this.siteFrom.show()\n  }\n}\n","<nz-modal \n\t[(nzVisible)]=\"showAccountForm\" \n\tnzTitle=\"新增账号\" \n\t[nzFooter]=\"null\" \n\t(nzOnCancel)=\"hidden()\"\n\t[nzWidth]=\"300\">\n  <form nz-form [formGroup]=\"validateForm\" nzLayout=\"vertical\" (ngSubmit)=\"addAccount()\">\n    <nz-form-item>\n      <nz-form-label  nzRequired nzFor=\"account\">账号</nz-form-label>\n      <nz-form-control [nzSpan]=\"24\" nzErrorTip=\"请输入账号!\">\n        <input id=\"note\" type=\"text\" nz-input formControlName=\"account\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"siteId\" >站点 &nbsp;<a (click)=\"showSiteModal()\">新增站点</a></nz-form-label>\n      <nz-form-control [nzSpan]=\"24\" nzErrorTip=\"请选择站点!\">\n        <nz-select formControlName=\"siteId\">\n          <nz-option  *ngFor=\"let site of sites\" [nzValue]=\"site.id\" [nzLabel]=\"site.name\"></nz-option>\n        </nz-select>\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-control [nzSpan]=\"24\">\n        <button nz-button nzBlock  nzType=\"primary\">确认</button>\n      </nz-form-control>\n    </nz-form-item>\n  </form>\n</nz-modal>\n\n<app-site-from (addSiteEvent)=\"fetchSites()\"></app-site-from>\n","import { Component, OnInit, Input,  SimpleChange  } from '@angular/core';\n\nimport MD5 from 'md5';\nimport Clipboard from 'Clipboard';\n\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\nimport {AccountService} from '../../services/account.service';\nimport {AuthService} from '../../services/auth.service';\n\nimport {Site} from '../../models/site';\nimport {Account} from '../../models/account';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n  logined: boolean;\n\n  bit = [1,4,7,10,13,16,19,22,25,28,31]\n\n  sites:Array<Site> = []\n  accounts: Array<Account> = []\n\n  siteId:number\n  accountId:number\n\n  account:string\n  domain:string\n  hash:string\n\n  password:string\n\n  showCopy = false\n  constructor(private accountService:AccountService,\n    private msg:NzMessageService,\n  \tprivate authService:AuthService) { \n    this.logined = authService.getLoginStatus()\n    authService.loginStatus$.subscribe(logined => {\n      this.logined = logined\n      if(this.logined){\n        this.fetchAccount()\n      }\n    })\n  }\n\n  ngOnInit(): void {\n  \tif(this.logined){\n      this.fetchAccount()\n  \t}\n  }\n\n  fetchAccount(){\n    this.accountService.accounts().subscribe((data:Array<Site>)=>{\n      this.sites = data\n    })\n  }\n\n  generate(){\n  \tvar g = MD5(this.account + \"@\" + this.domain + \":\" + this.hash),\n  \t\tt = '';\n\n  \tthis.bit.forEach(function(i){\n  \t\tt += ( i > 15 ) ? g[i].toUpperCase() : g[i];\n  \t})\n\n  \tthis.password = t;\n  \tif(!this.showCopy){\n\n  \t\tthis.showCopy = true\n  \t\tnew Clipboard('.copy').on('success', (e) =>  {\n        this.msg.success('密码已复制到粘贴板')\n      });\n  \t}\n  }\n\n  changeSite(id){\n\n  \tfor(var i in this.sites){\n  \t\tlet site = this.sites[i]\n  \t\tif (site.id == id) {\n  \t\t\tthis.accounts = site.accounts\n  \t\t\tthis.domain = site.host\n  \t\t}\n  \t}\n  }\n\n  changeAccount(id){\n\n  \tfor(var i in this.accounts){\n  \t\tlet account = this.accounts[i]\n  \t\tif (account.id == id) {\n  \t\t\tthis.account = account.account\n  \t\t}\n  \t}\n  }\n}\n","<form nz-form>\n\t<nz-form-item>\n\t\t<nz-form-control [nzXs]=\"20\" [nzMd]=\"8\" [nzXXl]=\"4\">\n\t\t\t<nz-input-group  nzPrefixIcon=\"home\">\n\t\t\t\t<input  *ngIf=\"!logined; else elseSiteBlock\" [(ngModel)]=\"domain\" name=\"domain\" nz-input placeholder=\"网站域名\" />\n\t\t\t\t<ng-template #elseSiteBlock>\n\t\t\t\t\t<nz-select nzBorderless nzSize=\"small\" \n\t\t\t\t\t\tname=\"siteId\"\n\t\t\t\t\t\t[(ngModel)]=\"siteId\"\n\t\t\t\t\t\t(ngModelChange)=\"changeSite($event)\">\n\t\t\t\t\t\t<nz-option *ngFor=\"let site of sites\" [nzLabel]=\"site.name\" [nzValue]=\"site.id\"></nz-option>\n\t\t\t\t\t</nz-select>\n\t\t\t\t</ng-template>\n\t\t\t</nz-input-group>\n\t\t</nz-form-control>\n\t</nz-form-item>\n\n\t<nz-form-item>\n\t\t<nz-form-control [nzXs]=\"20\" [nzMd]=\"8\" [nzXXl]=\"4\">\n\t\t\t<nz-input-group  nzPrefixIcon=\"user\">\n\t\t\t\t<input  *ngIf=\"!logined; else elseAccountBlock\"  [(ngModel)]=\"account\" name=\"account\" nz-input placeholder=\"用户名/登录名\" />\n\t\t\t\t<ng-template #elseAccountBlock>\n\t\t\t\t\t<nz-select nzBorderless nzSize=\"small\" \n\t\t\t\t\t\tname=\"accountId\"\n\t\t\t\t\t\t[(ngModel)]=\"accountId\"\n\t\t\t\t\t\t(ngModelChange)=\"changeAccount($event)\">\n\t\t\t\t\t\t<nz-option *ngFor=\"let account of accounts\" [nzLabel]=\"account.account\" [nzValue]=\"account.id\"></nz-option>\n\t\t\t\t\t</nz-select>\n\t\t\t\t</ng-template>\n\t\t\t</nz-input-group>\n\t\t</nz-form-control>\n\t</nz-form-item>\n\n\t<nz-form-item>\n\t\t<nz-form-control [nzXs]=\"20\" [nzMd]=\"8\" [nzXXl]=\"4\">\n\t\t\t<nz-input-group  nzPrefixIcon=\"lock\">\n\t\t\t\t<input [(ngModel)]=\"hash\" name=\"hash\" type=\"password\" nz-input placeholder=\"唯一码\" />\n\t\t\t</nz-input-group>\n\t\t</nz-form-control>\n\t</nz-form-item>\n\n\t<nz-form-item>\n\t\t<nz-form-control [nzXs]=\"20\" [nzMd]=\"8\" [nzXXl]=\"4\">\n\t\t\t<button nz-button nzType=\"primary\" nzBlock (click)=\"generate()\">生成</button>\n\t\t</nz-form-control>\n\t</nz-form-item>\n\n\t<nz-form-item *ngIf=\"showCopy\">\n\t\t<nz-form-control [nzXs]=\"20\" [nzMd]=\"8\" [nzXXl]=\"4\">\n\t\t\t<button nz-button class=\"copy\"  [attr.data-clipboard-text]=\"password\" nzType=\"primary\" nzGhost nzBlock>复制密码</button>\n\t\t</nz-form-control>\n\t</nz-form-item>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\nimport {AuthService} from '../../services/auth.service';\nimport {Token} from '../../models/token';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  validateForm!: FormGroup;\n\n  showLoginForm = false;\n  constructor(private fb: FormBuilder,\n  \tprivate authService:AuthService,\n    private message: NzMessageService) { }\n\n  ngOnInit(): void {\n    this.validateForm = this.fb.group({\n      email: [null, [Validators.required]],\n      password: [null, [Validators.required]],\n    });\n  }\n\n  login(){\n  \tthis.authService\n      .login(this.validateForm.value.email,this.validateForm.value.password)\n      .subscribe((response:Token) =>{\n        this.authService.setToken(response)\n\n        this.hidden()\n        this.message.create('success', `登录成功`);\n      })\n  }\n\n  show(){\n  \tthis.showLoginForm = true\n  }\n\n  hidden(){\n  \tthis.showLoginForm = false\n  }\n}\n","<nz-modal \n\t[(nzVisible)]=\"showLoginForm\" \n\tnzTitle=\"登录\" \n\t[nzFooter]=\"null\" \n\t(nzOnCancel)=\"hidden()\"\n\t[nzWidth]=\"300\">\n \t<form nz-form  [formGroup]=\"validateForm\" class=\"login-form\" (ngSubmit)=\"login()\">\n      \n      <nz-form-item>\n        <nz-form-control nzErrorTip=\"Please input your email!\">\n          <nz-input-group nzPrefixIcon=\"user\">\n            <input type=\"text\" nz-input formControlName=\"email\" placeholder=\"email\" />\n          </nz-input-group>\n        </nz-form-control>\n      </nz-form-item>\n      \n      <nz-form-item>\n        <nz-form-control nzErrorTip=\"Please input your Password!\">\n          <nz-input-group nzPrefixIcon=\"lock\">\n            <input type=\"password\" nz-input formControlName=\"password\" placeholder=\"Password\" />\n          </nz-input-group>\n        </nz-form-control>\n      </nz-form-item>\n      \n      <button nz-button class=\"login-form-button login-form-margin\" [nzType]=\"'primary'\" nzBlock>Log in</button>\n\n    </form>\n</nz-modal>","import { Component, OnInit,EventEmitter,Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\nimport { SiteService } from '../../services/site.service';\nimport {Site}  from '../../models/site';\n@Component({\n  selector: 'app-site-from',\n  templateUrl: './site-from.component.html',\n  styleUrls: ['./site-from.component.css']\n})\nexport class SiteFromComponent implements OnInit {\n\n  @Output() addSiteEvent = new EventEmitter<boolean>();\n\n  validateForm!: FormGroup;\n\n  showSiteForm = false;\n  constructor(private fb: FormBuilder,\n    private siteService:SiteService,\n    private message: NzMessageService) { }\n\n  ngOnInit(): void {\n    this.validateForm = this.fb.group({\n      name: [null, [Validators.required]],\n      host: [null, [Validators.required]],\n      description: [null],\n    });\n  }\n\n  show(){\n  \tthis.showSiteForm = true\n  }\n\n  hidden(){\n  \tthis.showSiteForm = false\n  }\n  addSite(){\n  \tthis.siteService.create(this.validateForm.value).subscribe((site:Site) => {\n      this.hidden()\n      this.addSiteEvent.emit()\n    })\n  }\n}\n","<nz-modal \n\t[(nzVisible)]=\"showSiteForm\" \n\tnzTitle=\"新增站点\" \n\t[nzFooter]=\"null\" \n\t(nzOnCancel)=\"hidden()\"\n\t[nzWidth]=\"300\">\n \t<form nz-form  [formGroup]=\"validateForm\"  nzLayout=\"vertical\" (ngSubmit)=\"addSite()\">\n      \n      <nz-form-item>\n        <nz-form-label  nzRequired nzFor=\"name\">名称</nz-form-label>\n        <nz-form-control nzErrorTip=\"请输入站点名称!\">\n          <input type=\"text\" nz-input formControlName=\"name\" />\n        </nz-form-control>\n      </nz-form-item>\n      \n      <nz-form-item>\n        <nz-form-label  nzRequired nzFor=\"host\">域名</nz-form-label>\n        <nz-form-control nzErrorTip=\"请输入站点域名!\">\n          <input type=\"text\" nz-input formControlName=\"host\" />\n        </nz-form-control>\n      </nz-form-item>\n\n      <nz-form-item>\n        <nz-form-label nzFor=\"description\">说明</nz-form-label>\n        <nz-form-control nzErrorTip=\"请输入站点描述!\">\n          <input type=\"text\" nz-input formControlName=\"description\" />\n        </nz-form-control>\n      </nz-form-item>\n      \n      <button nz-button class=\"login-form-button login-form-margin\" [nzType]=\"'primary'\" nzBlock>确认</button>\n\n    </form>\n</nz-modal>","import { Injectable } from '@angular/core';\r\nimport {\r\nHttpEvent, HttpInterceptor, HttpHandler, HttpRequest,HttpResponse,HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, retry, catchError } from 'rxjs/operators';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { AuthService } from '../services/auth.service'\r\n\r\n/** Pass untouched request through to the next request handler. */\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    guestRoute:Array<string> = [\r\n        '/api/auth/login'\r\n    ];\r\n\r\n    constructor(private auth: AuthService,\r\n        private msg: NzMessageService, \r\n        private router: Router) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        var authReq;\r\n        if(this.shouldAuth(req)){\r\n\r\n            const authToken = this.auth.getToken();\r\n            if(!authToken){\r\n                this.router.navigate(['/dashboard'])\r\n                throw \"no auth\";\r\n            }\r\n\r\n            authReq = req.clone({\r\n                headers: req.headers.set('Authorization', authToken.token_type + ' ' +authToken.access_token)\r\n            });\r\n        }else{\r\n            authReq = req;\r\n        }\r\n        return next.handle(authReq).pipe(\r\n          catchError((error: HttpErrorResponse) =>  {\r\n            if (error.error instanceof ErrorEvent) {\r\n              // A client-side or network error occurred. Handle it accordingly.\r\n              console.error('An error occurred:', error.error.message);\r\n            } else {\r\n              // The backend returned an unsuccessful response code.\r\n              // The response body may contain clues as to what went wrong,\r\n              console.error(\r\n                `Backend returned code ${error.status}, ` +\r\n                `body was: ${error.error}`);\r\n\r\n              if(error.status == 401){\r\n                this.auth.logout()\r\n                this.router.navigate(['/dashboard'])\r\n              }else if(error.status == 500){\r\n              }else if(error.status == 422){\r\n              }\r\n              this.msg.error(`${error.error.message}`);\r\n            }\r\n            // return an observable with a user-facing error message\r\n            return throwError(\r\n              'Something bad happened; please try again later.');\r\n          })\r\n        );\r\n\r\n    }\r\n\r\n    shouldAuth(req: HttpRequest<any>){\r\n        for (var key in this.guestRoute) {\r\n            if (this.guestRoute[key] == req.url){\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n}","export class Token {\n\taccess_token: string\n\texpires_in: number\n\ttoken_type: string\n}\n","import { Component, OnInit } from '@angular/core';\nimport {AccountComponent} from '../../components/account/account.component';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-account></app-account>\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport {AccountService} from '../../services/account.service';\n\nimport {Site} from '../../models/site';\nimport {Account} from '../../models/account';\n\nimport {AccountFromComponent} from '../../components/account-from/account-from.component';\n@Component({\n  selector: 'app-manager',\n  templateUrl: './manager.component.html',\n  styleUrls: ['./manager.component.css']\n})\nexport class ManagerComponent implements OnInit {\n\n  @ViewChild(AccountFromComponent)\n  private accountFrom: AccountFromComponent;\n  \n  constructor(private accountService:AccountService) { }\n\n  sites:Site[] = []\n  accounts: Account[] = []\n\n\n\n  ngOnInit(): void {\n    this.fetchAccount()\n  }\n\n  fetchAccount(){\n    this.accountService.accounts().subscribe((data:Array<Site>)=>{\n      this.sites = data\n      this.accounts = this.getAccount(this.sites)\n    })\n  }\n\n  getAccount(sites){\n  \tlet accounts:Array<Account> = []\n  \tsites.forEach((site, key)=>{\n  \t\tsite.accounts.forEach((account,key) => {\n  \t\t\taccount.site = site\n\n  \t\t\taccounts.push(account)\n  \t\t})\n  \t})\n  \treturn accounts\n  }\n  showAccountForm(){\n    this.accountFrom.show()\n  }\n\n  addAccountSuccess(){\n    this.fetchAccount()\n  }\n\n  cancel(): void {\n  }\n\n  delete(account:Account): void {\n    console.log(account)\n    this.accountService.delete(account.id).subscribe((data)=>{\n      this.fetchAccount()\n    })\n  }  \n}\n","<div class=\"table-operations\">\n\t<button nz-button  nzType=\"primary\" (click)=\"showAccountForm()\"><i nz-icon nzType=\"plus\" nzTheme=\"outline\"></i>添加账号</button>\n</div>\n\n<nz-table \n\t#accountsTable \n\tnzBordered \n\t[nzShowPagination]=\"false\"\n\t[nzData]=\"accounts\">\n\t<thead>\n\t\t<tr>\n\t\t  <th>账号</th>\n\t\t  <th>站点</th>\n\t\t  <th>删除</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr *ngFor=\"let account of accountsTable.data\">\n\t\t  <td>{{ account.account }}</td>\n\t\t  <td><span nz-tooltip [nzTooltipTitle]=\"account.site.host\">{{ account.site.name }}</span></td>\n\t\t  <td>\n\t\t\t<button \n\t\t\tnz-button\n\t\t\tnzDanger\n\t\t\tnz-popconfirm\n\t      \tnzPopconfirmTitle=\"确认删除账号?\"\n\t      \tnzPopconfirmPlacement=\"bottom\"\n\t      \t(nzOnConfirm)=\"delete(account)\"\n\t      \t(nzOnCancel)=\"cancel()\"><i nz-icon nzType=\"delete\" nzTheme=\"outline\"></i>删除</button>\n\t\t  </td>\n\t\t</tr>\n\t</tbody>\n</nz-table>\n\n<app-account-from (addEvent)=\"addAccountSuccess()\"></app-account-from>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(private http: HttpClient) { }\n\n  accounts(){\n  \treturn this.http.get('api/account')\n  }\n\n  add(account, siteId){\n  \treturn this.http.put('api/account', {\n  \t\taccount:account,\n  \t\tsiteId:siteId\n  \t});\n  }\n\n  delete(id){\n    return this.http.delete('/api/account/' + id)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, Subject } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { Token } from '../models/token';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private loginStatusSource = new Subject<boolean>();\n  loginStatus$ = this.loginStatusSource.asObservable();\n\n  token:Token = null;\n  \n  constructor(private http: HttpClient) { \n  \tvar tokenValue = localStorage.getItem('access_token')\n\n  \tif(tokenValue){\n  \t\tthis.token = new Token\n  \t\tthis.token.access_token = tokenValue\n  \t\tthis.token.expires_in = 3600\n  \t\tthis.token.token_type = localStorage.getItem('token_type')\n  \t}\n  }\n\n  loginStatusChange() {\n    this.loginStatusSource.next(!!this.token);\n  }\n\n  getLoginStatus(){\n    return !!this.token\n  }\n\n  setToken(token){\n    this.token = token\n    localStorage.setItem('access_token', token.access_token);\n    localStorage.setItem('token_type', token.token_type);\n\n    this.loginStatusChange()\n  }\n\n  getToken(){\n  \treturn this.token\n  }\n\n  login(email, password){\n  \treturn this.http.post('/api/auth/login', {\n  \t\temail:email,\n  \t\tpassword:password\n  \t});\n  }\n\n  user(){\n    return this.http.get('/api/profile');\n  }\n\n  logout(){\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('token_type');\n    this.token = null\n    this.loginStatusChange()\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SiteService {\n\n  constructor(private http: HttpClient) { }\n\n  sites(){\n  \treturn this.http.get('api/site')\n  }\n\n  create(site){\n  \treturn this.http.put('api/site', site)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}